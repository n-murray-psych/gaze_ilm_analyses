################################################################################
# DATA CLEANING
################################################################################
# Detection task
detection_task <- subset(
df,
df$task_requirement == "detection"
)
# Coding cue validity
detection_task$cue_validity <- ifelse(
detection_task$cue_location == detection_task$target_location,
"valid",
ifelse(
detection_task$cue_location == "neutral", "neutral",
"invalid"
)
)
# Coding accuracy
detection_task$accuracy <- ifelse(
detection_task$target_location == detection_task$response,
1, 0
)
# Line motion rating task
line_task <- subset(
df,
df$task_requirement != "detection"
)
# Recode line motion ratings from -50 to +50
line_task$response <- as.numeric(line_task$response)
line_task$response <- .5 - line_task$response
line_task$response <- -1 * line_task$response
################################################################################
# SUMMARY DATAFRAMES
################################################################################
detection_summary <- summary_dataframe(detection_task, FALSE)
line_summary <- summary_dataframe(line_task, TRUE)
line_summary$combined_cue_type_location <- paste0(
line_summary$cue_type,
" ",
line_summary$cue_location
)
line_task_summary_left_motion <- subset(line_summary,
task_requirement == "leftward real line motion rating"
)
line_task_summary_right_motion <- subset(line_summary,
task_requirement == "rightward real line motion rating"
)
line_task_summary_illusory_motion <- subset(line_summary,
task_requirement == "illusory line motion rating"
)
detection_rt_graph <- ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_rt, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Reaction Time (ms)") +
labs(title = "Cuing Effect Reaction Times")
detection_accuracy_graph <- ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_accuracy, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Accuracy (%)") +
labs(title = "Cuing Effect Accuracies")
detection_rt_graph
detection_accuracy_graph
motion_graph <- ggplot(
data = line_task_summary,
aes(
x = mean_line_rating,
y = combined_cue_type_location,
colour = task_type
)
) +
geom_point() +
geom_errorbar(
aes(
xmin = mean_line_rating - sd_line_rating,
xmax = mean_line_rating + sd_line_rating
)
)
motion_graph
illusory_motion_graph <- ggplot(
data = line_task_summary_illusory_motion,
aes(
x = mean_line_rating,
y = combined_cue_type_location
)
) +
geom_point() +
geom_errorbar(
aes(
xmin = mean_line_rating - sd_line_rating,
xmax = mean_line_rating + sd_line_rating
)
) +
labs(title = "Illusory Motion"
) +
xlab("Line Motion Rating (Left to Right") +
ylab("Cue Type") +
geom_vline(xintercept = 0, linetype = "dashed") +
xlim(-.5, .5)
illusory_motion_graph
right_motion_graph <- ggplot(
data = line_task_summary_right_motion,
aes(
x = mean_line_rating,
y = combined_cue_type_location
)
) +
geom_point() +
geom_errorbar(
aes(
xmin = mean_line_rating - sd_line_rating,
xmax = mean_line_rating + sd_line_rating
)
) +
labs(title = "Rightward Motion"
) +
xlab("Line Motion Rating (Left to Right") +
ylab("Cue Type") +
geom_vline(xintercept = 0, linetype = "dashed") +
xlim(-.5, .5)
right_motion_graph
left_motion_graph <- ggplot(
data = line_task_summary_left_motion,
aes(
x = mean_line_rating,
y = combined_cue_type_location
)
) +
geom_point() +
geom_errorbar(
aes(
xmin = mean_line_rating - sd_line_rating,
xmax = mean_line_rating + sd_line_rating
)
) +
labs(title = "Leftward Motion"
) +
xlab("Line Motion Rating (Left to Right") +
ylab("Cue Type") +
geom_vline(xintercept = 0, linetype = "dashed") +
xlim(-.5, .5)
left_motion_graph
illusory_motion_graph
ls()
library(tidyverse)
library(gridExtra)
source("data_cleaning.R")
detection_rt_graph <- ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_rt, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Reaction Time (ms)") +
labs(title = "Cuing Effect Reaction Times")
detection_accuracy_graph <- ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_accuracy, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Accuracy (%)") +
labs(title = "Cuing Effect Accuracies")
motion_graph <- ggplot(
data = line_task_summary,
aes(
x = mean_line_rating,
y = combined_cue_type_location,
colour = task_type
)
) +
geom_point() +
geom_errorbar(
aes(
xmin = mean_line_rating - sd_line_rating,
xmax = mean_line_rating + sd_line_rating
)
)
left_motion_graph <- ggplot(
data = line_task_summary_left_motion,
aes(
x = mean_line_rating,
y = combined_cue_type_location
)
) +
geom_point() +
geom_errorbar(
aes(
xmin = mean_line_rating - sd_line_rating,
xmax = mean_line_rating + sd_line_rating
)
) +
labs(title = "Leftward Motion"
) +
xlab("Line Motion Rating (Left to Right") +
ylab("Cue Type") +
geom_vline(xintercept = 0, linetype = "dashed") +
xlim(-.5, .5)
right_motion_graph <- ggplot(
data = line_task_summary_right_motion,
aes(
x = mean_line_rating,
y = combined_cue_type_location
)
) +
geom_point() +
geom_errorbar(
aes(
xmin = mean_line_rating - sd_line_rating,
xmax = mean_line_rating + sd_line_rating
)
) +
labs(title = "Rightward Motion"
) +
xlab("Line Motion Rating (Left to Right") +
ylab("Cue Type") +
geom_vline(xintercept = 0, linetype = "dashed") +
xlim(-.5, .5)
illusory_motion_graph <- ggplot(
data = line_task_summary_illusory_motion,
aes(
x = mean_line_rating,
y = combined_cue_type_location
)
) +
geom_point() +
geom_errorbar(
aes(
xmin = mean_line_rating - sd_line_rating,
xmax = mean_line_rating + sd_line_rating
)
) +
labs(title = "Illusory Motion"
) +
xlab("Line Motion Rating (Left to Right") +
ylab("Cue Type") +
geom_vline(xintercept = 0, linetype = "dashed") +
xlim(-.5, .5)
illusory_motion_graph
illusory_motion_graph <- ggplot(
data = line_task_summary_illusory_motion,
aes(
x = mean_line_rating,
y = combined_cue_type_location
)
) +
geom_point() +
geom_errorbar(
aes(
xmin = mean_line_rating - sd_line_rating,
xmax = mean_line_rating + sd_line_rating
)
) +
labs(title = "Illusory Motion"
) +
xlab("Line Motion Rating (Left to Right") +
ylab("Cue Type") +
geom_vline(xintercept = 0, linetype = "dashed") +
xlim(-.5, .5) +
theme_classic()
illusory_motion_graph
example(ggsave)
view(ggsave)
?ggsave
ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_accuracy, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Accuracy (%)") +
labs(title = "Cuing Effect Accuracies") +
theme_classic()
ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_rt, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Reaction Time (ms)") +
labs(title = "Cuing Effect Reaction Times") +
theme_classic()
ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_rt, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Reaction Time (ms)") +
labs(title = "Cuing Effect Reaction Times") +
theme_classic(legend.position = FALSE)
ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_rt, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Reaction Time (ms)") +
labs(title = "Cuing Effect Reaction Times") +
theme_classic(legend.position = "none")
ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_rt, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Reaction Time (ms)") +
labs(title = "Cuing Effect Reaction Times") +
theme_classic() +
theme(legend.position = "none")
detection_rt_graph <- ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_rt, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Reaction Time (ms)") +
labs(title = "Cuing Effect Reaction Times") +
theme_classic() +
theme(legend.position = "none")
detection_accuracy_graph <- ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_accuracy, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Accuracy (%)") +
labs(title = "Cuing Effect Accuracies") +
theme_classic()
grid.arrange(detection_rt_graph, detection_accuracy_graph, nrow = 1)
detection_rt_graph <- ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_rt, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Reaction Time (ms)") +
labs(title = "Cuing Effect Reaction Times") +
theme_classic()
detection_accuracy_graph <- ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_accuracy, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Accuracy (%)") +
labs(title = "Cuing Effect Accuracies") +
theme_classic()
grid.arrange(detection_rt_graph, detection_accuracy_graph, nrow = 1)
detection_rt_graph <- ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_rt, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Reaction Time (ms)") +
labs(title = "Cuing Effect \n Reaction Times") +
theme_classic()
detection_accuracy_graph <- ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_accuracy, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Accuracy (%)") +
labs(title = "Cuing Effect \n Accuracies") +
theme_classic()
grid.arrange(detection_rt_graph, detection_accuracy_graph, nrow = 1)
detection_rt_graph <- ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_rt, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Reaction Time (ms)") +
labs(title = "Cuing Effect") +
theme_classic()
detection_rt_graph <- ggplot(data = detection_summary,
aes(x = cue_validity, y = mean_rt, group = cue_type, colour = cue_type)
) +
geom_point() +
geom_smooth(stat = "identity") +
xlab("Cue Validity") +
ylab("Mean Reaction Time (ms)") +
labs(title = "Cuing Effect") +
theme_classic() +
labs(colour = "Cue Type")
detection_rt_graph
illusory_motion_graph
?ggsave
ggsave("ilm_plot.pdf", illusory_motion_graph, width = 1, height = 1, dpi = 300)
ggsave("ilm_plot.pdf", illusory_motion_graph, width = 10, height = 10, dpi = 300)
ggsave("ilm_plot.pdf", illusory_motion_graph, width = 5, height = 5, dpi = 300)
ggsave("cuing_effect_rt_plot.pdf", detection_rt_graph, width = 5, height = 5, dpi = 300)
ggsave("ilm_plot.pdf", illusory_motion_graph, width = 5, height = 2, dpi = 300)
ggsave("cuing_effect_rt_plot.pdf", detection_rt_graph, width = 5, height = 2, dpi = 300)
grid.arrange(
detection_rt_graph,
illusory_motion_graph,
nrow = 2
)
# Load data and convenience functions
setwd("/Users/nickmurray/Desktop/Klein_Lab_Projects/gaze_ilm_analyses")
source("convenience_functions.R")
source("data_cleaning.R")
# Import packages
library(gridExtra)
library(afex)
library(ez)
library(emmeans)
################################################################################
# DETECTION TASK ANOVAS
################################################################################
rt_anova_detection <- ezANOVA(data = detection_task,
dv = reaction_time,
wid = participant,
within = .(cue_type, cue_validity),
return_aov = TRUE,
detailed = FALSE
)
acc_anova_detection <- ezANOVA(data = detection_task,
dv = accuracy,
wid = participant,
within = .(cue_type, cue_validity),
return_aov = TRUE,
detailed = FALSE
)
emmeans(rt_anova_detection$aov, ~ cue_type * cue_validity)
rt_anova_detection
unique(detection_task$cue_type)
unique(detection_task$cue_validity)
contrast_matrix <- matrix(c(
1, -1, 0, # valid vs invalid, neutral as reference
1, 0, -1, # valid vs neutral, invalid as reference
0, 1, -1 # invalid vs neutral, valid as reference
))
rt_anova_detection <- ezANOVA(data = detection_task,
dv = reaction_time,
wid = participant,
within = .(cue_type, cue_validity),
return_aov = TRUE,
detailed = FALSE,
contrasts = list(group = contrast_matrix)
)
contrast_matrix <- matrix(c(
1, -1, 0, # valid vs invalid, neutral as reference
1, 0, -1, # valid vs neutral, invalid as reference
0, 1, -1 # invalid vs neutral, valid as reference
), ncol = 3, byrow = TRUE)
contrast_matrix
?ezANOVA
rt_anova_detection <- ezANOVA(data = detection_task,
dv = reaction_time,
wid = participant,
within = .(cue_type, cue_validity),
return_aov = TRUE,
detailed = FALSE,
within_full = cue_validity,
contrasts = list(cue_validity = contrast_matrix)
)
rt_anova_detection <- ezANOVA(data = detection_task,
dv = reaction_time,
wid = participant,
within = .(cue_type, cue_validity),
return_aov = TRUE,
detailed = FALSE,
)
?TukeyHSD
TukeyHSD(rt_anova_detection$aov)
TukeyHSD(rt_anova_detection)
?ezANOVA
?afex
example(aov_ez)
?aov_ez
aov_ez(data = detection_task,
dv = reaction_time,
wid = participant,
within = .(cue_type, cue_validity),
return_aov = TRUE,
detailed = FALSE
)
colnames(detection_task)
aov_ez(
id = "participant",
dv = "reaction_time",
data = detection_task,
within = c("cue_type", "cue_validity")
)
detection_rt_anova <- aov_ez(
id = "participant",
dv = "reaction_time",
data = detection_task,
within = c("cue_type", "cue_validity")
)
?lsmeans
lsmeans(detection_rt_anova, c("cue_validity"))
rt_ls <- lsmeans(detection_rt_anova, c("cue_validity"))
update(pairs(rt_ls), by = NULL, adjust = "holm")
detection_rt_anova
rt_ls_interaction <- lsmeans(detection_rt_anova, c("cue_validity", "cue_type"))
update(pairs(rt_ls_interaction), by = NULL, adjust = "holm")
rt_ls_interaction <- lsmeans(detection_rt_anova, c("cue_type"))
update(pairs(rt_ls_interaction), by = NULL, adjust = "holm")
rt_ls_interaction <- lsmeans(detection_rt_anova, c("cue_validity", "cue_type"))
update(pairs(rt_ls_interaction), by = NULL, adjust = "holm")
rt_ls_interaction <- lsmeans(detection_rt_anova, c("cue_validity", "cue_type"))
update(pairs(rt_ls_interaction), by = NULL, adjust = "holm")
